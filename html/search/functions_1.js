var searchData=
[
  ['if_75',['if',['../functions_8cpp.html#adde92fb9977d6a2691b9e51408acaf2b',1,'functions.cpp']]],
  ['is_5fdebug_5flvl_5f0_76',['is_debug_lvl_0',['../functions_8cpp.html#ab6a7f118acbb3bf426cc42b327cba415',1,'is_debug_lvl_0(void verifyStack(Stack *stk){ if(stk-&gt;data==(type *) 0xBEBE) { stk-&gt;status|=ERR_STACK_ALREADY_CLEANED;} if(stk-&gt;status &amp;(ERR_STACK_ALREADY_CLEANED)==0){ is_debug_lvl_1(if(stk-&gt;hash !=hashCalc(stk)) { stk-&gt;status|=ERR_WRONG_HASH;}) if(stk-&gt;size &gt; stk-&gt;capacity) { stk-&gt;status|=ERR_SIZE_GREATER_CAPACITY;} is_debug_lvl_1(if(stk-&gt;egg !=CANARY(stk)) { printf(&quot;stk-&gt;egg ---- %lu\n&quot;, stk-&gt;egg);stk-&gt;status|=ERR_LEFT_CANARY_DAMAGED;} if(stk-&gt;chicken !=CANARY(stk)) { stk-&gt;status|=ERR_RIGHT_CANARY_DAMAGED;} if((*((u_int64_t *)(LEFT_CANARY(stk)))) !=CANARY(stk)){ stk-&gt;status|=ERR_LEFT_DATACANARY_DAMAGED;} if((*((u_int64_t *)(RIGHT_CANARY(stk)))) !=CANARY(stk)) { stk-&gt;status|=ERR_RIGHT_DATACANARY_DAMAGED;}) for(int i=stk-&gt;size;i&lt; stk-&gt;capacity;i++){ if(stk-&gt;data[i] !=POISON){ stk-&gt;status|=ERR_EMPTY_ELEM_ISNT_POISONED;} } } } void stackDump(const Stack *stk, const char *func_name, const char *stack_name) { fprintf(logs, &quot;Stack &lt;&gt; adress[%p] \&quot;%s\&quot; at %s\n&quot;, stk, stack_name, func_name);fprintf(logs, &quot;---------------------------------------------------------------------------------\n&quot;);fprintf(logs, &quot;STATUS = %16s\n&quot; &quot;stack size = %12d\n&quot; &quot;stack capacity = %8d\n&quot; &quot;data [%p]\n&quot;,(stk-&gt;status==OK) ? &quot;OK&quot; :&quot;BROKEN&quot;, stk-&gt;size, stk-&gt;capacity, stk-&gt;data);if(stk-&gt;status){ printError(stk-&gt;status);fprintf(logs, &quot;\n&quot;);} else { for(int i=0;i&lt; stk-&gt;size;i++){ fprintf(logs, &quot;*data[%d] = %d\n&quot;, i, stk-&gt;data[i]);} for(int i=stk-&gt;size;i&lt; stk-&gt;capacity;i++){ fprintf(logs, &quot;*data[%d] = %X\n&quot;, i, stk-&gt;data[i]);} } fprintf(logs, &quot;---------------------------------------------------------------------------------\n\n\n&quot;);fflush(logs);}) static int MemCpy(void *destination:&#160;functions.cpp'],['../functions_8cpp.html#a6bf8cc6b1b0e32da797565b749c68bf6',1,'is_debug_lvl_0(void printError(int Error) { if(Error &amp;1) fprintf(logs, &quot;ERR_CALLING_FUNC_FAILED &quot;);if(Error &amp;(1&lt;&lt; 1)) fprintf(logs, &quot;ERR_STACK_ALREARY_CREATED &quot;);if(Error &amp;(1&lt;&lt; 2)) fprintf(logs, &quot;ERR_EMPTY_ELEM_ISNT_POISONED &quot;);if(Error &amp;(1&lt;&lt; 3)) fprintf(logs, &quot;ERR_SIZE_GREATER_CAPACITY &quot;);if(Error &amp;(1&lt;&lt; 4)) fprintf(logs, &quot;ERR_POP_EMPTY_STACK &quot;);if(Error &amp;(1&lt;&lt; 5)) fprintf(logs, &quot;ERR_RIGHT_CANARY_DAMAGED &quot;);if(Error &amp;(1&lt;&lt; 6)) fprintf(logs, &quot;ERR_LEFT_CANARY_DAMAGED &quot;);if(Error &amp;(1&lt;&lt; 7)) fprintf(logs, &quot;ERR_WRONG_HASH &quot;);if(Error &amp;(1&lt;&lt; 8)) fprintf(logs, &quot;ERR_INVALID_PTR &quot;);if(Error &amp;(1&lt;&lt; 9)) fprintf(logs, &quot;ERR_REALLOC_FAILED &quot;);if(Error &amp;(1&lt;&lt; 10)) fprintf(logs, &quot;ERR_PUSH_FAILED &quot;);if(Error &amp;(1&lt;&lt; 11)) fprintf(logs, &quot;ERR_STACK_ALREADY_CLEANED &quot;);if(Error &amp;(1&lt;&lt; 12)) fprintf(logs, &quot;ERR_LEFT_DATACANARY_DAMAGED &quot;);if(Error &amp;(1&lt;&lt; 13)) fprintf(logs, &quot;ERR_RIGHT_DATACANARY_DAMAGED &quot;);if(Error &amp;(1&lt;&lt; 14)) fprintf(logs, &quot;ERR_RESIZE_FAILED &quot;);if(Error &amp;(1&lt;&lt; 15)) fprintf(logs, &quot;ERR_POP_FAILED &quot;);if(Error &amp;(1&lt;&lt; 16)) fprintf(logs, &quot;ERR_DUMP_FAILED &quot;);if(Error &amp;(1&lt;&lt; 17)) fprintf(logs, &quot;ERR_STACK_BROKEN &quot;);}) is_debug_lvl_1(static void setCanary(Stack *stk:&#160;functions.cpp'],['../main_8cpp.html#a963da6693f5b64a9bfb9fac7d5ad9d87',1,'is_debug_lvl_0(FILE *logs=fopen(&quot;Logs&quot;, &quot;w&quot;)):&#160;main.cpp']]],
  ['is_5fdebug_5flvl_5f1_77',['is_debug_lvl_1',['../struct_stack.html#afa4ffea81aa4a6b7668a3ed5bfa6917d',1,'Stack::is_debug_lvl_1()'],['../functions_8cpp.html#ae1cb03ca8a148224b698da5bd71e2ef5',1,'is_debug_lvl_1():&#160;functions.cpp']]]
];
